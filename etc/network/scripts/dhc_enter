#!/bin/bash
# Copyleft by dimbor <i@dimbor.ru> 2020
# based on https://habr.com/ru/post/199478/

. /etc/network/scripts/functions
dscfn="$DHCPLIB/$interface.dsc"
case $reason in
	BOUND|RENEW|REBIND|REBOOT)
		[ -n "$ns_debug" ] && log "dhc_enter $interface $reason $new_ip_address"
		# save iface description to special file
		[ -f "$dscfn" ] && rm -f "$dscfn"
		#unset new_host_name
		new_cidr=$(cidr_by_netmask $new_subnet_mask); new_subnet=""
		[ -n "$new_cidr" -a -n "$new_network_number" ] && \
			new_subnet="$new_network_number/$new_cidr"
		for basevar in $dhcp_vars_to_save; do
			var="new_$basevar"; eval "cont=\$$var"
			# show only variables with values set
			if [ -n "$cont" ]; then
				echo "saved_$basevar=\"$cont\"" >> "$dscfn"
			fi
		done
		old_cidr=$(cidr_by_netmask $old_subnet_mask); old_subnet=""
		[ -n "$old_cidr" -a -n "$old_network_number" ] && \
			new_subnet="$old_network_number/$old_cidr"
		for basevar in $dhcp_vars_to_save; do
			var="old_$basevar"; eval "cont=\$$var"
			# show only variables with values set
			if [ -n "$cont" ]; then
				echo "$var=\"$cont\"" >> "$dscfn"
			fi
		done
		case $interface in
			$defwan) # by default enable routers only for first WAN interface
			;;
			*) # and clear it for others
				unset new_routers
			;;
		esac
	;;
	#EXPIRE|FAIL|STOP|RELEASE)
	#	[ -n "$ns_debug" ] && log "dhc_enter $interface $reason"
	#;;
	#PREINIT) # don't log if this stage entered
	EXPIRE|FAIL|STOP|RELEASE|PREINIT) # don't log if this stages entered
	;;
	*)
			[ -n "$ns_debug" ] && log "dhc_enter $interface $reason!"
	;;
esac
