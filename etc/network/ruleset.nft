#!/usr/sbin/nft -f

flush ruleset

#define voip_net = 192.168.88.0/24

table inet filter {

	# input ports sets
	set wan_udp_ports_closed { type inet_service; flags interval;
		elements = { 53, 123, 631, 135-139, 445 }
	}
	set wan_tcp_ports_closed { type inet_service; flags interval;
		elements = { 135-139, 445 }
	}
	set wan_udp_ports_open { type inet_service; flags interval;
		elements = { 1194 }
	}
	set wan_tcp_ports_open { type inet_service; flags interval; }

	# forward ports sets
	set fw_tcp_ports_open { type inet_service; flags interval;
		elements = { 222, 666 }
	}
	set fw_udp_ports_open { type inet_service; flags interval;
	}

	set ifn_int { type ifname; flags constant;
		elements = { xenbr1, tun0, tun1 }
	}
	set ifn_wan { type ifname; flags constant;
		elements = { eth1, eth2 }
	}
	set aint_drop { type ipv4_addr; flags timeout, interval; }

	chain input { type filter hook input priority 0; policy drop;
		tcp dport ssh accept; ct state invalid drop
		tcp sport 443 tcp flags & (rst) == rst counter drop comment "Simple DPI 'hack'"
		ct state { related, established } accept
		icmp type echo-request accept comment "Allow pings"
		ct state new udp dport { 33435-33523, 44450-44500} accept comment "Allow traces"

		# ultimate dtop, no log
		iifname @ifn_wan udp dport @wan_udp_ports_closed drop
		iifname @ifn_wan tcp dport @wan_tcp_ports_closed drop

		# open ports
		iifname @ifn_wan udp dport @wan_udp_ports_open accept
		iifname @ifn_wan tcp dport @wan_tcp_ports_open accept

		#iifname @ifn_wan udp dport @fw_udp_ports_open counter accept
		#iifname @ifn_wan tcp dport @fw_tcp_ports_open counter accept

		iif lo accept; iifname @ifn_int accept
		#iifname @ifn_int ip saddr $voip_net counter accept

		limit rate 3/minute burst 3 packets counter log prefix "netfilter: DROPPED input: " level notice
	}

	chain forward { type filter hook forward priority 0; policy drop;
		tcp dport ssh accept; ct state invalid counter drop
		ip saddr @aint_drop counter drop
		tcp sport 443 tcp flags & (rst) == rst counter drop comment "Simple DPI 'hack'"
		#oifname { eth1, eth2 } tcp flags syn tcp option maxseg size set rt mtu
		ct state { related, established } accept
		udp dport @fw_udp_ports_open accept; tcp dport @fw_tcp_ports_open accept
		ct state new iifname @ifn_int accept
		#ip saddr $voip_net counter accept; ip daddr $voip_net counter accept

		limit rate 3/minute burst 3 packets counter log prefix "netfilter: DROPPED forward: " level notice
	}

	chain output { type filter hook output priority 0; policy accept;
		tcp sport ssh accept
		ct state invalid counter drop
	}
}

table ip mangle {
	chain postrouting { type route hook output priority -150; policy accept;
		oifname { eth1, eth2 } ip ttl set 64
	}
}

table ip nat {
	chain premark { type filter hook prerouting priority -150; policy accept;
		iifname eth1 tcp dport @pw ct state new ct mark set 0x101
		iifname eth2 tcp dport @pw ct state new ct mark set 0x102
		iifname xenbr1 ct mark != 0 meta mark set ct mark
	}

	chain prerouting { type nat hook prerouting priority -150; policy accept;
		#iif xenbr1 tcp dport http counter redirect to squid
		iifname { eth1, eth2 } tcp dport 222 counter dnat 192.168.1.33:ssh
		iifname { eth1, eth2 } tcp dport 666 counter dnat 192.168.1.34:ssh
	}

	chain postrouting { type nat hook postrouting priority -150; policy accept;
		#oif eth1 counter snat ?.?.?.?
		oifname { eth1, eth2 } counter masquerade
	}
}
